{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'HDML'\ndebug                     = CND.get_logger 'debug',     badge\n# warn                      = CND.get_logger 'warn',      badge\n# info                      = CND.get_logger 'info',      badge\n# urge                      = CND.get_logger 'urge',      badge\n# help                      = CND.get_logger 'help',      badge\n# whisper                   = CND.get_logger 'whisper',   badge\n# echo                      = CND.echo.bind CND\n#...........................................................................................................\ntypes                     = new ( require 'intertype' ).Intertype\nGUY                       = require 'guy'\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\ntypes.declare 'constructor_cfg', tests:\n  \"@isa.object x\":                  ( x ) -> @isa.object x\n  \"@isa.nonempty_text x.open\":      ( x ) -> @isa.nonempty_text x.open\n  \"@isa.nonempty_text x.selfclose\": ( x ) -> @isa.nonempty_text x.selfclose\n  \"@isa.nonempty_text x.close\":     ( x ) -> @isa.nonempty_text x.close\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\nclass @Hdml\n\n  #-----------------------------------------------------------------------------------------------------------\n  @C: GUY.lft.freeze\n    defaults:\n      constructor_cfg:\n        open:       '<'\n        selfclose:  '^'\n        close:      '>'\n\n  #-----------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    clasz = @constructor\n    GUY.props.hide @, 'types', types\n    @types.validate.constructor_cfg cfg = { clasz.C.defaults.constructor_cfg..., cfg..., }\n    @cfg  = GUY.lft.freeze cfg\n    return undefined\n\n  #-----------------------------------------------------------------------------------------------------------\n  escape_text: ( text ) ->\n    R = text\n    R = R.replace /&/g,   '&amp;'\n    R = R.replace /</g,   '&lt;'\n    R = R.replace />/g,   '&gt;'\n    return R\n\n  #-----------------------------------------------------------------------------------------------------------\n  atr_value_as_text: ( x ) ->\n    R = if @types.isa.text x then x else JSON.stringify x\n    R = @escape_text R\n    R = R.replace /'/g,   '&#39;'\n    R = R.replace /\\n/g,  '&#10;'\n    return \"'#{R}'\"\n\n  #-----------------------------------------------------------------------------------------------------------\n  create_tag: ( sigil, tag, atrs = null ) ->\n    return switch sigil\n      when @cfg.open      then @_create_opening_or_selfclosing_tag false, tag, atrs\n      when @cfg.selfclose then @_create_opening_or_selfclosing_tag true,  tag, atrs\n      when @cfg.close     then @create_closing_tag tag\n    throw new Error \"^45487^ illegal sigil #{rpr sigil}\"\n\n  #-----------------------------------------------------------------------------------------------------------\n  create_opening_tag:     ( tag, atrs = null ) -> @_create_opening_or_selfclosing_tag false, tag, atrs\n  create_selfclosing_tag: ( tag, atrs = null ) -> @_create_opening_or_selfclosing_tag true,  tag, atrs\n\n  #-----------------------------------------------------------------------------------------------------------\n  _create_opening_or_selfclosing_tag: ( is_selfclosing, tag, atrs = null ) ->\n    ### TAINT validate or escape tag, atr keys ###\n    s = if is_selfclosing then '/' else ''\n    return \"<#{tag}#{s}>\" if ( not atrs? ) or ( ( Object.keys atrs ).length is 0 )\n    atrs_txt = ( \"#{k}=#{@atr_value_as_text v}\" for k, v of atrs ).join ' '\n    return \"<#{tag} #{atrs_txt}#{s}>\"\n\n  #-----------------------------------------------------------------------------------------------------------\n  ### TAINT validate or escape tag ###\n  create_closing_tag: ( tag ) -> \"</#{tag}>\"\n\n\n### NOTE default instance: ###\n@HDML = new @Hdml()\n\n\n\n"
  ]
}